{
  "mashling_schema": "1.0",
  "gateway": {
    "name": "MyCircuitBreakerProxy",
    "version": "1.0.0",
    "display_name":"Circuit Breaker",
    "description": "Protect services with circuit breaker pattern",
    "triggers": [
      {
        "name": "MyProxy",
        "description": "Animals rest trigger",
        "type": "github.com/TIBCOSoftware/mashling/ext/flogo/trigger/gorillamuxtrigger",
        "settings": {
          "port": "9096"
        },
        "handlers": [
          {
            "dispatch": "PetsGet",
            "settings": {
              "autoIdReply": "false",
              "method": "GET",
              "path": "/pets/{petId}",
              "useReplyHandler": "false"
            }
          }
        ]
      }
    ],
    "dispatches": [
      {
        "name": "PetsGet",
        "routes": [
          {
            "steps": [
              {
                "service": "CircuitBreaker"
              },
              {
                "service": "PetStorePets",
                "input": {
                  "method": "GET"
                }
              },
              {
                "if": "PetStorePets.response.netError != ''",
                "service": "CircuitBreaker",
                "input": {
                  "operation": "counter"
                }
              },
              {
                "if": "PetStorePets.response.netError == ''",
                "service": "CircuitBreaker",
                "input": {
                  "operation": "reset"
                }
              }
            ],
            "responses": [
              {
                "if": "CircuitBreaker.tripped == true",
                "error": true,
                "output": {
                  "code": 403,
                  "data": {
                    "error": "circuit breaker tripped"
                  }
                }
              },
              {
                "if": "PetStorePets.response.body.status != 'available'",
                "error": true,
                "output": {
                  "code": 403,
                  "data": {
                    "error": "Pet is unavailable",
                    "pet": "${PetStorePets.response.body}",
                    "status": "${PetStorePets.response.body.status}"
                  }
                }
              },
              {
                "if": "PetStorePets.response.body.status == 'available'",
                "error": false,
                "output": {
                  "code": 200,
                  "data": {
                    "pet": "${PetStorePets.response.body}",
                    "status": "${PetStorePets.response.body.status}"
                  }
                }
              },
              {
                "error": true,
                "output": {
                  "code": 403,
                  "data": {
                    "error": "connection failure"
                  }
                }
              }
            ]
          }
        ]
      }
    ],
    "services": [
      {
        "name": "CircuitBreaker",
        "description": "Circuit breaker service",
        "type": "circuitBreaker",
        "settings": {
          "mode": "a",
          "context": "get"
        }
      },
      {
        "name": "PetStorePets",
        "description": "Make calls to find pets",
        "type": "http",
        "settings": {
          "url": "http://localhost:1234/pets",
          "netError": true
        }
      }
    ]
  }
}
